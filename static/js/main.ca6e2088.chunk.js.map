{"version":3,"sources":["serviceWorker.js","index.js","components/App.js","components/Navbar.js","photo.png","components/Main.js"],"names":["Boolean","window","location","hostname","match","ReactDOM","render","react_default","a","createElement","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","IPFS","require","client","NFTStorage","token","host","port","protocol","apiPath","props","_this","Object","C_Users_jayda_Documents_web3_Decentragram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_3__","this","C_Users_jayda_Documents_web3_Decentragram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_4__","C_Users_jayda_Documents_web3_Decentragram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_5__","call","captureFile","event","preventDefault","file","target","files","reader","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","result","console","log","state","uploadImage","_ref","C_Users_jayda_Documents_web3_Decentragram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","C_Users_jayda_Documents_web3_Decentragram_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee4","description","someData","cid","wrap","_context4","prev","next","Blob","storeBlob","sent","loading","decentragram","methods","send","from","account","on","hash","stop","_x","apply","arguments","images","bind","C_Users_jayda_Documents_web3_Decentragram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_8__","tipImageOwner","loadWeb3","loadBlockchainData","ethereum","web3","Web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","Decentragram","networks","Contract","abi","imageCount","imagesCount","i","image","concat","C_Users_jayda_Documents_web3_Decentragram_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_toConsumableArray__WEBPACK_IMPORTED_MODULE_0__","sort","b","tipAmount","id","_this2","value","react__WEBPACK_IMPORTED_MODULE_10___default","_Navbar__WEBPACK_IMPORTED_MODULE_12__","className","_Main__WEBPACK_IMPORTED_MODULE_13__","Component","Navbar","react__WEBPACK_IMPORTED_MODULE_5___default","href","rel","src","photo","width","height","alt","Identicon","toString","module","exports","__webpack_require__","p","Main","role","style","maxWidth","onSubmit","imageDescription","type","accept","onChange","ref","input","placeholder","required","map","key","author","class","utils","fromWei","name","onClick","toWei"],"mappings":"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","file":"static/js/main.ca6e2088.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css'\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import Decentragram from '../abis/Decentragram.json'\nimport React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport Navbar from './Navbar'\nimport Main from './Main'\nimport Web3 from 'web3';\nimport './App.css';\n// import  create  from 'ipfs-http-client'\n// const NFTStorage = require('nft.storage')\nimport {NFTStorage, Blob} from 'nft.storage/dist/bundle.esm.min.js'\n\n\n\n\n\n//Declare IPFS\n// const ipfsClient = require('ipfs-http-client')\n// const ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https', headers: {\n//   authorization: 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDFhNWNiQTlFYkQwRTcxZWE4NTA0Zjk5NGE0MkNBOUE3MWRlQTkwZTAiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY2MDM5NDEyMjQxOSwibmFtZSI6IkRUd2l0dGVyLTEifQ.0N-3jYVHOy1etZJxQ9jSm_Pk34h9RVmTpSSO2H_XnX0',\n// }, }) // leaving out the arguments will default to these values\nlet NFT_STORAGE_TOKEN='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDFhNWNiQTlFYkQwRTcxZWE4NTA0Zjk5NGE0MkNBOUE3MWRlQTkwZTAiLCJpc3MiOiJuZnQtc3RvcmFnZSIsImlhdCI6MTY2MDM5NDEyMjQxOSwibmFtZSI6IkRUd2l0dGVyLTEifQ.0N-3jYVHOy1etZJxQ9jSm_Pk34h9RVmTpSSO2H_XnX0'\nconst IPFS=require('ipfs-http-client');\nconst create=require('ipfs-http-client');\n// var client = create('https://ipfs.infura.io:5001/api/v0');\n// var client = create(' https://ipfs.infura.io:5001/api/v0/add?params');\nconst client = new NFTStorage({ token: NFT_STORAGE_TOKEN })\n\n\n// const ipfs=new IPFS({host:'ipfs.infura.io',port:5001,protocol:'https',apiPath: '/ipfs/api/v0'});\nconst ipfs =new IPFS({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'http',\n  apiPath:'/ipfs/api/v0'\n})\n\n\nclass App extends Component {\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    // Network ID\n    const networkId = await web3.eth.net.getId()\n    const networkData = Decentragram.networks[networkId]\n    // if(networkData) {\n      const m = true\n    if(m) {\n      // const decentragram = new web3.eth.Contract(Decentragram.abi, networkData.address)\n      const decentragram = new web3.eth.Contract(Decentragram.abi, '0x2E0C4D0468Fc9516DEAad8436F86960E8eCC3aa1')\n      this.setState({ decentragram })\n      const imagesCount = await decentragram.methods.imageCount().call()\n      this.setState({ imagesCount })\n      console.log(\"imagecount\", imagesCount)\n      // Load images\n      for (var i = 1; i <= imagesCount; i++) {\n        const image = await decentragram.methods.images(i).call()\n        console.log(\"images is:-\",image)\n        this.setState({\n          images: [...this.state.images, image]\n        })\n      }\n      // Sort images. Show highest tipped images first\n      this.setState({\n        images: this.state.images.sort((a,b) => b.tipAmount - a.tipAmount )\n      })\n      this.setState({ loading: false})\n    } else {\n      window.alert('Decentragram contract not deployed to detected network.')\n    }\n  }\n\n  captureFile = event => {\n\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\n  uploadImage =async description => {\n    console.log(\"Submitting file to ipfs...\")\n    const someData = new Blob([this.state.buffer])\n    const cid = await client.storeBlob(someData)\n    console.log(\"CId:- \", cid)\n    console.log(\"buffer crearted\")\n    //adding file to the IPFS\n    // await client.storeBlob(\n    //   // this.state.buffer, (error, result) => {\n    //     someData, (error, result) => {\n    //     console.log('entered into the page')\n    //   console.log('Ipfs result', result)\n    //   if(error) {\n    //     console.error(error)\n    //     return\n    //   }\n\n      this.setState({ loading: true })\n      // this.state.decentragram.methods.uploadImage(result[0].hash, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\n      this.state.decentragram.methods.uploadImage(cid, description).send({ from: this.state.account }).on('transactionHash', (hash) => {\n        this.setState({ loading: false })\n      })\n    \n  };\n\n  tipImageOwner(id, tipAmount) {\n    this.setState({ loading: true })\n    this.state.decentragram.methods.tipImageOwner(id).send({ from: this.state.account, value: tipAmount }).on('transactionHash', (hash) => {\n      this.setState({ loading: false })\n    })\n  }\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      account: '',\n      decentragram: null,\n      images: [],\n      loading: true\n    }\n\n    this.uploadImage = this.uploadImage.bind(this)\n    this.tipImageOwner = this.tipImageOwner.bind(this)\n    this.captureFile = this.captureFile.bind(this)\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar account={this.state.account} />\n        { this.state.loading\n          ? <div id=\"loader\" className=\"text-center mt-5\"><p>Loading...</p></div>\n          : <Main\n              images={this.state.images}\n              captureFile={this.captureFile}\n              uploadImage={this.uploadImage}\n              tipImageOwner={this.tipImageOwner}\n            />\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\nimport photo from '../photo.png'\n\nclass Navbar extends Component {\n\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n        <a\n          className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n          href=\"\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <img src={photo} width=\"30\" height=\"30\" className=\"d-inline-block align-top\" alt=\"\" />\n          Decentragram\n        </a>\n        <ul className=\"navbar-nav px-3\">\n          <li className=\"nav-item text-nowrap d-none d-sm-none d-sm-block\">\n            <small className=\"text-secondary\">\n              <small id=\"account\">{this.props.account}</small>\n            </small>\n            { this.props.account\n              ? <img\n                className='ml-2'\n                width='30'\n                height='30'\n                src={`data:image/png;base64,${new Identicon(this.props.account, 30).toString()}`}\n              />\n              : <span></span>\n            }\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\n\nexport default Navbar;","module.exports = __webpack_public_path__ + \"static/media/photo.d6cbd8e6.png\";","import React, { Component } from 'react';\nimport Identicon from 'identicon.js';\n\nclass Main extends Component {\n\n  render() {\n    return (\n      <div className=\"container-fluid mt-5\">\n        <div className=\"row\">\n          <main role=\"main\" className=\"col-lg-12 ml-auto mr-auto\" style={{ maxWidth: '500px' }}>\n            <div className=\"content mr-auto ml-auto\">\n              <p>&nbsp;</p>\n              <h2>Share Image</h2>\n              <form onSubmit={(event) => {\n                event.preventDefault()\n                const description = this.imageDescription.value\n                this.props.uploadImage(description)\n              }} >\n                <input type='file' accept=\".jpg, .jpeg, .png, .bmp, .gif\" onChange={this.props.captureFile} />\n                  <div className=\"form-group mr-sm-2\">\n                    <br></br>\n                      <input\n                        id=\"imageDescription\"\n                        type=\"text\"\n                        ref={(input) => { this.imageDescription = input }}\n                        className=\"form-control\"\n                        placeholder=\"Image description...\"\n                        required />\n                  </div>\n                <button type=\"submit\" className=\"btn btn-primary btn-block btn-lg\">Upload</button>\n              </form>\n              <p>&nbsp;</p>\n              { this.props.images.map((image, key) => {\n                return(\n                  <div className=\"card mb-4\" key={key} >\n                    <div className=\"card-header\">\n                      <img\n                        className='mr-2'\n                        width='30'\n                        height='30'\n                        src={`data:image/png;base64,${new Identicon(image.author, 30).toString()}`}\n                      />\n                      <small className=\"text-muted\">{image.author}</small>\n                    </div>\n                    <ul id=\"imageList\" className=\"list-group list-group-flush\">\n                      <li className=\"list-group-item\">\n                        {/* <p class=\"text-center\"><img src={`https://ipfs.infura.io/ipfs/${image.hash}`} style={{ maxWidth: '420px'}}/></p> */}\n                        <p class=\"text-center\"><img src={`https://ipfs.io/ipfs/${image.hash}`} style={{ maxWidth: '420px'}}/></p>\n                        <p>{image.description}</p>\n                      </li>\n                      <li key={key} className=\"list-group-item py-2\">\n                        <small className=\"float-left mt-1 text-muted\">\n                          TIPS: {window.web3.utils.fromWei(image.tipAmount.toString(), 'Ether')} ETH\n                        </small>\n                        <button\n                          className=\"btn btn-link btn-sm float-right pt-0\"\n                          name={image.id}\n                          onClick={(event) => {\n                            let tipAmount = window.web3.utils.toWei('0.1', 'Ether')\n                            console.log(event.target.name, tipAmount)\n                            this.props.tipImageOwner(event.target.name, tipAmount)\n                          }}\n                        >\n                          TIP 0.1 ETH\n                        </button>\n                      </li>\n                    </ul>\n                  </div>\n                )\n              })}\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Main;"],"sourceRoot":""}